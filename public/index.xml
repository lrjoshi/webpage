<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lok Raj Joshi on Lok Raj Joshi</title>
    <link>/</link>
    <description>Recent content in Lok Raj Joshi on Lok Raj Joshi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Virus Growth Curve Generator App</title>
      <link>/post/growthcurve_app_post/</link>
      <pubDate>Mon, 20 Aug 2018 21:13:14 -0500</pubDate>
      
      <guid>/post/growthcurve_app_post/</guid>
      <description>&lt;p&gt;I designed this shiny based app to generate growth curves. This app is based on ggplot and dplyr functions.You can try by downloading &lt;a href=&#34;https://github.com/lrjoshi/files/blob/master/public/c159s.csv&#34;&gt;sample data here&lt;/a&gt;.Codes are available on my &lt;a href=&#34;https://github.com/lrjoshi/gcplotR&#34;&gt;Github&lt;/a&gt;.Sometimes, the app goes to idle state.You can activate it by clicking &lt;strong&gt;Reload&lt;/strong&gt; button below. Here is the sample output. &lt;img src=&#34;http://lokfiles.netlify.com/graph.png&#34; /&gt;&lt;/p&gt;
&lt;iframe src=&#34;https://heartsdsu.shinyapps.io/gcshiny/?showcase=0&#34; width=&#34;672&#34; height=&#34;600px&#34;&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Creating 96-Well Plates in R</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Mon, 23 Jul 2018 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>&lt;p&gt;This week I did some virus neutralization test. I wanted to show the results exactly I saw in 96-well plate. I was looking if there is any package in R that can actually do this. Actually there is one (or might be more). I found a package called &lt;strong&gt;platetools&lt;/strong&gt; that can plot values in plates.&lt;/p&gt;
&lt;p&gt;I wan’t to show how I did it.&lt;/p&gt;
&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;First load all the required packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(platetools)
library(viridis)
## Loading required package: viridisLite&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Prepare your datasets.I prepared in R as shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data=read.csv(&amp;quot;df.csv&amp;quot;)
data
##     X vals well
## 1   1    1  A01
## 2   2    0  A02
## 3   3    0  A03
## 4   4    1  A04
## 5   5    0  A05
## 6   6    0  A06
## 7   7    0  A07
## 8   8    0  A08
## 9   9    0  A09
## 10 10    0  A10
## 11 11    0  A11
## 12 12    1  A12
## 13 13    1  B01
## 14 14    0  B02
## 15 15    0  B03
## 16 16    1  B04
## 17 17    0  B05
## 18 18    0  B06
## 19 19    0  B07
## 20 20    0  B08
## 21 21    0  B09
## 22 22    0  B10
## 23 23    0  B11
## 24 24    1  B12
## 25 25    1  C01
## 26 26    0  C02
## 27 27    0  C03
## 28 28    1  C04
## 29 29    0  C05
## 30 30    0  C06
## 31 31    0  C07
## 32 32    0  C08
## 33 33    0  C09
## 34 34    0  C10
## 35 35    1  C11
## 36 36    0  C12
## 37 37    1  D01
## 38 38    0  D02
## 39 39    0  D03
## 40 40    0  D04
## 41 41    0  D05
## 42 42    0  D06
## 43 43    0  D07
## 44 44    0  D08
## 45 45    0  D09
## 46 46    0  D10
## 47 47    1  D11
## 48 48    0  D12
## 49 49    0  E01
## 50 50    0  E02
## 51 51    0  E03
## 52 52    0  E04
## 53 53    0  E05
## 54 54    0  E06
## 55 55    0  E07
## 56 56    0  E08
## 57 57    0  E09
## 58 58    0  E10
## 59 59    1  E11
## 60 60    0  E12
## 61 61    0  F01
## 62 62    0  F02
## 63 63    0  F03
## 64 64    0  F04
## 65 65    0  F05
## 66 66    0  F06
## 67 67    0  F07
## 68 68    0  F08
## 69 69    0  F09
## 70 70    0  F10
## 71 71    1  F11
## 72 72    0  F12
## 73 73    0  G01
## 74 74    0  G02
## 75 75    0  G03
## 76 76    0  G04
## 77 77    0  G05
## 78 78    0  G06
## 79 79    0  G07
## 80 80    0  G08
## 81 81    0  G09
## 82 82    0  G10
## 83 83    1  G11
## 84 84    0  G12
## 85 85    0  H01
## 86 86    0  H02
## 87 87    0  H03
## 88 88    0  H04
## 89 89    0  H05
## 90 90    0  H06
## 91 91    0  H07
## 92 92    0  H08
## 93 93    0  H09
## 94 94    0  H10
## 95 95    1  H11
## 96 96    0  H12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally plot your data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plate_id &amp;lt;- rep(c(&amp;quot;My Plate&amp;quot;), each = 96)

z_grid(data = data$vals,
       well = data$well,
       plate_id = plate_id) +
  ggtitle(&amp;quot;Virus Neutralization Test&amp;quot;)
## Warning: package &amp;#39;bindrcpp&amp;#39; was built under R version 3.4.4&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here, the label is not useful because I am interested only in positive and negative. But can be useful in plotting ELISA plates.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pathogenicity and cross-reactive immune responses of a historical and a contemporary Senecavirus A strains in pigs</title>
      <link>/publication/sva-cross-reactive/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 -0500</pubDate>
      
      <guid>/publication/sva-cross-reactive/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goals of this study were to compare the pathogenicity and infection dynamics of a historical and a contemporary SVA strains (SVV 001 and SD15-26) and to assess cross-neutralizing and cross-reactive T cell responses following experimental infection in pigs. Both SVA strains successfully infected all inoculated animals, resulting in viremia and robust antibody and cellular immune responses. SVA SD15-26 infection resulted in characteristic clinical signs and vesicular lesions, however, SVA SVV 001 did not cause overt clinical disease with inoculated animals remaining clinically normal during the experiment. Notably, neutralization- and -recall IFN-γ expression-assays revealed marked cross-neutralizing antibody and cross-reactive T cell responses between the two viral strains. Together these results demonstrate that the historical SVA SVV 001 strain presents low virulence in pigs when compared to the contemporary SVA SD15-26 strain. Additionally, immunological assays indicate that SVA SVV 001 and SD15-26 are antigenically related and share conserved antigenic determinants.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Next generation sequencing</title>
      <link>/project/deep-learning/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;We are using Illumina MiSeq for viral genome sequencing.We have sequenced over 40 isolated of Senecavirus A using Illumina Miseq. Often we run viral metagenomic sequencing in &lt;a href=&#34;https://lokfiles.netlify.com/papilloma.pdf&#34; target=&#34;_blank&#34;&gt;clinical samples for disease diagnosis&lt;/a&gt;. I have deep interest in viral informatics. In the &lt;strong&gt;Posts&lt;/strong&gt; section of this webpage you can find some of the tools I am learning to develop my bioinformatics skills.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Senecavirus A Pathogenesis</title>
      <link>/project/sva-pathogenesis/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/project/sva-pathogenesis/</guid>
      <description>&lt;p&gt;Senecavirus A is a re-emergiging disease of swine. It causes vesicular disease in swine. Despite detection of Senecavirus A nucleic acid in pigs with vesicular disease, attemps to establish causal relationship had failed. We were able to reproduce the disease in swine and we have published a detail pathogenesis of Senecavirus A &lt;a href=&#34;http://lokfiles.netlify.com/sva-pathogenesis.pdf&#34; target=&#34;_blank&#34;&gt;in this paper&lt;/a&gt;. We are still working to understand other aspects of this disease in swine.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vectored-vaccine development</title>
      <link>/project/orf-vector/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/project/orf-vector/</guid>
      <description>&lt;p&gt;We have developed Orf virus, which is parapox virus, as a vaccine delivery platfrom. We are using well-characterized immunomudolatory loci present in the genome of Orf virus to insert heterologous genes to develop receombinant viruses that can be used as a vaccine. We have already shown high level of protection against PEDV using &lt;a href=&#34;https://lokfiles.netlify.com/orfv-pedv.pdf&#34; target=&#34;_blank&#34;&gt;recombinant Orf virus expressing Spike gene of PEDV&lt;/a&gt;. This recombinant virus also protects piglets born to our recombinant virus immunized sows &lt;a href=&#34;https://lokfiles.netlify.com/pedv-passive-immunity.pdf&#34; target=&#34;_blank&#34;&gt;(Check paper here)&lt;/a&gt;. Our goal is to develop Orf virus as a vaccine delivery platform for many other infectious disease of swine and other livestock species.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RNA-Seq Data Analysis in R</title>
      <link>/post/second-post/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/second-post/</guid>
      <description>&lt;p&gt;RNA-Seq data analysis can be complicated. Softwares with graphical user interface like CLC Workbench have made RNA-Seq data analysis quite easier but often we don&amp;rsquo;t know how the algorithm is working especially if you are from biology background like me. I decided to run a small simulation to understand how this works.It is amazing how a single R package can do things like read aligning and read counts in a few lines of codes.&lt;/p&gt;

&lt;p&gt;Install Rsubread package in R.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source(&amp;quot;https://bioconductor.org/biocLite.R&amp;quot;)
biocLite(&amp;quot;Rsubread&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load package&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library (Rsubread)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Actually for this simulation I created a small .fasta file pulling some of the sequences from the &lt;strong&gt;Senecavirus A&lt;/strong&gt; genome. I created a fasta file with few contigs each containing about 70-100 basepairs , and named each contig as read 1, read 2 and so on.And I pulled some sequences from the Zika virus. I will be aligning my reads using Senecavirus genome as a reference. So, Zika virus reads should be ignored by Rsubread while aligning.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;read1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;read2
AGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGTGGGGAACGGTGCGGCTCCAATTCCTGCGTCGCCA
&amp;gt;read3
AAGGTGTTAGCGCACCCAAACGGCGCATCTACCAATGCTATTGGTGTGGTCTGCGAGTTCTAGCCTACTC
&amp;gt;read4
GTTTCTCCCCTACTCACTCATTCACACACAAAAACTGTGTTGTAACTACAAGATTTGGCCCTCGCACGGG
&amp;gt;read5
ATGTGCGATAACCGCAAGATTGACTCAAGCGCGGAAAGCGCTGTAACCACATGCTGTTAGTCCCTTTATG
&amp;gt;readagain1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;readagain2
AGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGTGGGGAACGGTGCGGCTCCAATTCCTGCGTCGCCA
&amp;gt;readagain3
GTTTCTCCCCTACTCACTCATTCACACACAAAAACTGTGTTGTAACTACAAGATTTGGCCCTCGCACGGG
&amp;gt;read12
CGGGGGGTAAACCGGCTGTGTTTGCTAGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGT
&amp;gt;read23
CGGCTCCAATTCCTGCGTCGCCAAAGGTGTTAGCGCACCCAA
&amp;gt;read34
GTGTGGTCTGCGAGTTCTAGCCTACTCGTTTCTCCCCTACTCACTCATTCACACACAAAAA
&amp;gt;read45
CTACAAGATTTGGCCCTCGCACGGGATGTGCGATAACCGCAAGATTGACTCAAGCGCGGAAAGCGCTGTAACC
&amp;gt;readsvalast
TGCCGTACCGAGTCACGAGTACCTGCAGGCAAGATGGAGGGCCTTGTTCGACTGACCTGGATAGCCCAACGCGCTTCGGTGCTGCCGGCGATTCTGGGAGAACTCAGTCGGA
&amp;gt;readagain1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;zika1
AGTTGTTGATCTGTGTGAATCAGACTGCGACAGTTCGAGTTTGAAGCGAAAGCTAGCAACAGTATCAACA
&amp;gt;zika12
AAAGCTAGCAACAGTATCAACAGGTTTTATTTTGGATTTGGAAACGAGAGTTTCTGGTCATGAAAAACCCA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This fasta file needs to be changed into &lt;strong&gt;fastq&lt;/strong&gt; format. There are many tools available to convert fasta file to fastq format. I use &lt;strong&gt;reformat.sh&lt;/strong&gt; script which is a part of bbmap. You can find details about bbmap and reformat.sh script elsewhere. The general syntax is as follow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./reformat.sh in= meta.fasta out=meta.fastq qfake=35
#meta.fasta is my input file, meta.fastq is the output file and we are assigning quality score of 34 to all the basepairs.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, lets go back to R. We have loaded our package already. First, we need to build index of our reference files. Use the same Senecavirus A whole genome file which you used to extract reads in the above example. The file can be in fasta format. Then run follwing command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#syntax
buildindex(basename=&amp;quot;reference_index&amp;quot;,reference=ref)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my case it would be&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buildindex(basename= “seneca”, reference= “sva.fasta”)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, I can align your reads with the index which I  created above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;align(index=&amp;quot;seneca&amp;quot;,readfile1=”meta.fastq”,output_file=&amp;quot;alignResults.BAM&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I saw that all the reads that were in meta.fastq belonging to Senecavirus A were aligned while , all the Zika virus reads were ignored.The output will be in .BAM format.&lt;/p&gt;

&lt;p&gt;Now the tricky part. We need a annotated file in GTF or GFF format to count the features or genes aligned. For viruses usually you don&amp;rsquo;t file well-annotated files. Rsubread package allows you to create a such file in tabular format which they call it SAF format.&lt;/p&gt;

&lt;p&gt;So, lets use follwing code to create one SAF file for this analysis.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ann &amp;lt;- data.frame(
GeneID=c(&amp;quot;gene1&amp;quot;,&amp;quot;gene1&amp;quot;,&amp;quot;gene2&amp;quot;,&amp;quot;gene2&amp;quot;),
Chr=&amp;quot;KX778101.1&amp;quot;,
Start=c(100,1000,3000,5000),
End=c(500,1800,4000,5500),
Strand=c(&amp;quot;+&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;-&amp;quot;,&amp;quot;-&amp;quot;),
stringsAsFactors=FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; ann
  GeneID        Chr Start  End Strand
1  gene1 KX778101.1   100  500      +
2  gene1 KX778101.1  1000 1800      +
3  gene2 KX778101.1  3000 4000      -
4  gene2 KX778101.1  5000 5500      -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here you have to use Genebank accession number of virus genome as Chr. Beacuse .BAM file that we created by aligning whill have accession number liked to each reads. Other parameters can be changed.&lt;/p&gt;

&lt;p&gt;Now, final step is to count reads.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fc_SE &amp;lt;- featureCounts(&amp;quot;alignResults.BAM&amp;quot;,annot.ext=ann)
fc_SE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see how many features were counted on the basis of information you provided in SAF table.&lt;/p&gt;

&lt;p&gt;Hope this will help you to understand how Rsubread package works. I had to struggle to create SAF file, but I got help from Biostar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Passive immunity to porcine epidemic diarrhea virus following immunization of pregnant gilts with a recombinant orf virus vector expressing the spike protein</title>
      <link>/publication/pedv-passive-immunity/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/publication/pedv-passive-immunity/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Passive immunity is critical for protection of neonatal piglets against porcine epidemic diarrhea virus (PEDV). Here, we investigated the immunogenicity of an orf virus (ORFV) vector expressing the full-length spike (S) protein of PEDV (ORFV-PEDV-S) in pregnant gilts and its ability to confer passive immunity and protection in piglets. Three doses of ORFV-PEDV-S were given to two groups of PEDV-negative pregnant gilts, with the last dose being administered two weeks prior to farrowing. One of the two groups immunized with the ORFV-PEDV-S recombinant virus was also exposed to live PEDV orally on day 31 post-immunization (pi). Antibody responses were assessed in serum, colostrum and milk of immunized gilts, and passive transfer of antibodies was evaluated in piglet sera. The protective efficacy of ORFV-PEDV-S was evaluated after challenge of the piglets with PEDV. PEDV-specific IgG, IgA and neutralizing antibody (NA) responses were detected in ORFV-PEDV-S-immunized and ORFV-PEDV-S-immunized/PEDV-exposed gilts. PEDV NA, IgG and IgA were detected in the serum of piglets born to immunized gilts, demonstrating the transfer of antibodies through colostrum and milk. Piglets born to immunized gilts showed reduced morbidity and a marked reduction in mortality after PEDV challenge in comparison to control piglets. Piglets born to gilts that received ORFV-PEDV-S and were exposed to live PEDV showed stronger NA responses and lower clinical scores when compared to piglets born to gilts immunized with ORFV-PEDV-S alone. These results demonstrate the potential of ORFV as a vaccine delivery platform capable of eliciting passive immunity against PEDV.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RacePCR- R package for designing primers for Race PCR</title>
      <link>/post/racepcr-post/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 -0500</pubDate>
      
      <guid>/post/racepcr-post/</guid>
      <description>

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;You can use this package to design 3&amp;rsquo; and 5&amp;rsquo;primers for Race PCR. The design is based on as described by Clonetech Race PCR manual. The resulting primers will have vector sequence automatically added to them. Source code is available at my &lt;a href=&#34;https://github.com/lrjoshi/RacepcR&#34; target=&#34;_blank&#34;&gt;Github page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;library(devtools)&lt;/p&gt;

&lt;p&gt;install_github(&amp;ldquo;lrjoshi/RacepcR&amp;rdquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;getDNA(dnaseq) #enter DNA Sequence and check length&lt;/p&gt;

&lt;p&gt;quality (dnaseq) #to see if your sequence contains character other than AGTC.&lt;/p&gt;

&lt;p&gt;gcbarplot(dnaseq) #gives barplot of nucleotide content&lt;/p&gt;

&lt;p&gt;get5prime(dnaseq,x) #gives you 5&amp;rsquo; primer&lt;/p&gt;

&lt;p&gt;get3prime(dnaseq,y) #gives you 3&amp;rsquo; primer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;arguments&#34;&gt;Arguments&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;dnaseq : it is the sequence of your DNA. For eg : &amp;ldquo;aaggcctt&amp;rdquo;&lt;/p&gt;

&lt;p&gt;x  :position where you want to start your 5&amp;rsquo; primer&lt;/p&gt;

&lt;p&gt;y  :position where you want to start your 3&amp;rsquo; primer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;

&lt;p&gt;This package depends on Biostrings package. So, you should have already installed Biostrings package from Bioconductor.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;library (RacepcR)&lt;/p&gt;

&lt;p&gt;library(Biostrings)&lt;/p&gt;

&lt;p&gt;getDNA(&amp;ldquo;aaggccttcc&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;quality (&amp;ldquo;aaggcct&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;gcbarplot(&amp;ldquo;aaaaagccggt&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;get5prime(&amp;ldquo;aaaggcggcggcttcggcgcgctcgtgctgctgctgcggcgctcctttcgctcgtcgctgctttctctcgct&amp;rdquo;,30)&lt;/p&gt;

&lt;p&gt;get3prime(&amp;ldquo;aaaggcggccccctcttcggccttcgctgctgctgcggcgcggctcgcgctgctgctttgctgctcgggctcgt&amp;rdquo;,10)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Adaptive immune responses following Senecavirus A infection in pigs</title>
      <link>/publication/sva-adaptive/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 -0600</pubDate>
      
      <guid>/publication/sva-adaptive/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Senecavirus A (SVA), an emerging picornavirus of swine, causes vesicular disease (VD) that is clinically indistinguishable from foot-and-mouth disease (FMD) in pigs. Many aspects of SVA interactions with the host and the host immune responses to infection, however, remain unknown. In the present study, humoral and cellular immune responses to SVA were evaluated following infection in pigs. We show that SVA infection elicited an early and robust virus-neutralizing (VN) antibody response, which coincided and was strongly correlated with VP2- and VP3-specific IgM responses. Notably, the neutralizing antibody (NA) responses paralleled the reduction of viremia and resolution of the disease. Analysis of the major porcine T-cell subsets revealed that during the acute/clinical phase of SVA infection (14 days postinfection [p.i.]), T-cell responses were characterized by an increased frequency of αβ T cells, especially CD4+ T cells, which were first detected by day 7 p.i. and increased in frequency until day 14 p.i. Additionally, the frequency of CD8+ and double-positive CD4+ CD8+ T cells (effector/memory T cells) expressing interferon gamma (IFN-γ) or proliferating in response to SVA antigen stimulation increased after day 10 p.i. Results presented here show that SVA elicits B- and T-cell activation early upon infection, with IgM antibody levels being correlated with early neutralizing activity against the virus and peak B- and T-cell responses paralleling clinical resolution of the disease. The work provides important insights into the immunological events that follow SVA infection in the natural host.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Immunogenicity of ORFV-based vectors expressing the rabies virus glycoprotein in livestock species</title>
      <link>/publication/orfv-rabies/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 -0500</pubDate>
      
      <guid>/publication/orfv-rabies/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The parapoxvirus Orf virus (ORFV) encodes several immunomodulatory proteins (IMPs) that modulate host-innate and pro-inflammatory responses and has been proposed as a vaccine delivery vector for use in animal species. Here we describe the construction and characterization of two recombinant ORFV vectors expressing the rabies virus (RABV) glycoprotein (G). The RABV-G gene was inserted in the ORFV024 or ORFV121 gene loci, which encode for IMPs that are unique to parapoxviruses and inhibit activation of the NF-κB signaling pathway. The immunogenicity of the resultant recombinant viruses (ORFV∆024RABV-G or ORFV∆121RABV-G, respectively) was evaluated in pigs and cattle. Immunization of the target species with ORFV∆024RABV-G and ORFV∆121RABV-G elicited robust neutralizing antibody responses against RABV. Notably, neutralizing antibody titers induced in ORFV∆121RABV-G-immunized pigs and cattle were significantly higher than those detected in ORFV∆024RABV-G-immunized animals, indicating a higher immunogenicity of ORFVΔ121-based vectors in these animal species.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A novel bovine papillomavirus type in the genus Dyokappapapillomavirus</title>
      <link>/publication/papilloma/</link>
      <pubDate>Mon, 16 Oct 2017 00:00:00 -0500</pubDate>
      
      <guid>/publication/papilloma/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Papillomaviruses are a diverse group of viruses that are known to infect a wide range of animal species. Bovine papillomaviruses (BPVs) are divided into at least 21 genotypes (BPV1 to BPV21),  with most BPV isolates/strains described to date belonging to one of four genera, including Deltapapillomavirus, Xipapillomavirus, Epsilonpapillomavirus and Dyoxipapillomavirus. Here, we describe the identification and genetic characterization of a new BPV type in the genus Dyokappapapillomavirus. A farm in the state of New York, USA, reported chronic cases of vulvovaginitis in Holstein cows in 2016. Biopsies and/or swab samples collected from the vaginal mucosa were subjected to diagnostic investigation. Conventional diagnostic assays yielded negative results, and vaginal swab samples were subjected to viral metagenomic sequencing. Notably, BLAST searches revealed a papillomavirus genome with 7480 bp in length (67% nt sequence identity to BPV16). Additionally, phylogenetic analysis of the L1 gene of the papillomavirus identified here (tentatively named BPV22) revealed that it clusters with members of the genus Dyokappapapillomavirus. Interestingly, the recently identified BPV16, which was detected in fibropapilloma lesions in cattle also clusters within the Dyokappapapillomavirus group. Each virus, however, forms a separate branch in the phylogenetic tree. These results indicate that the putative BPV22 represents the second BPV within the genus Dyokappapapillomavirus.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The S2 glycoprotein subunit of porcine epidemic diarrhea virus contains immunodominant neutralizing epitopes</title>
      <link>/publication/pedv-s2/</link>
      <pubDate>Fri, 01 Sep 2017 00:00:00 -0500</pubDate>
      
      <guid>/publication/pedv-s2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The porcine epidemic diarrhea virus (PEDV) spike (S) protein is the major target of neutralizing antibodies against PEDV. Here immunodominant neutralizing epitopes of PEDV were identified using a panel of S-specific monoclonal antibodies (mAbs). Ten of eleven S-specific mAbs successfully neutralized PEDV infectivity in vitro. Notably, epitope mapping by peptide ELISAs revealed that nine of these mAbs recognized linear neutralizing epitopes located in the N-terminus of the S2 glycoprotein subunit (amino acids [aa] 744–759, 747–774 and/or 756–771). Additionally, one mAb recognized a neutralizing epitope located in the C-terminus of S2 (aa 1371–1377), while only one neutralizing mAb reacted against a region of the S1 glycoprotein subunit (aa 499–600). Notably, mAbs that recognized epitopes within the S2 subunit presented the highest neutralizing activity against PEDV. Together these results indicate that the S2 glycoprotein subunit contains major antigenic determinants and, perhaps, the immunodominant neutralizing epitopes of PEDV.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Genetic characterization and phylogenetic analysis of senecavirus A circulating in the US and in Brazil.</title>
      <link>/publication/sva-brazil/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 -0600</pubDate>
      
      <guid>/publication/sva-brazil/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Neonatal pig mortality associated with senecavirus A.</title>
      <link>/publication/sva-embraba/</link>
      <pubDate>Sun, 25 Dec 2016 00:00:00 -0600</pubDate>
      
      <guid>/publication/sva-embraba/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Senecavirus A (SVA) is an emerging picornavirus that
has been associated with outbreaks of vesicular disease
in swine. In 2015, neonatal mortality affecting piglets
of 07 days of age correlated with SVA, was reported
in Brazil. Here, we present an investigation carried
on during 20152016 in five farrowtofinish swine operations
in Southern Brazil showing an increased
neonatal mortality and also vesicular disease that
have been associated to SVA infection. Piglets were
lethargic and had a watery diarrhea. The mortality
rate increased in 23% and in some littermates a 100%
of mortality was observed. Despite of a relatively fast
onset of wasting syndrome progressing to mortality, all
herds recovered to baseline mortality levels within 410
days. Piglets were necropsied and tissue samples were
collected for histopathology, RTPCR for SVA detection
targeting the VP1 VP3 region, and for viral isolation in
H1299 cell culture. Genome sequences of VP1 gene of
five SVA isolates were compared to other SVA sequences
available on GenBank. Necropsy of six piglets revealed
empty stomach and mesocolonic edema. In general,
it was observed enlargement and edema of inguinal
lymph nodes, pulmonary edema, ascites and ulcerative
lesions on the snout and coronary band. Microscopic
lesions were characterized by necrotic epidermitis and
dermatitis of coronary band, mild enteritis with villus
degeneration on small intestine, marked mesocolon
edema and multifocal hemorrhage with lung edema.
Senecavirus A was detected by RTPCR in tonsil, lung,
liver, intestine and coronary band. SVA was isolated in
cell culture from tonsil, lung, intestine and coronary band
from piglets of all farms. Sequence comparisons based
on a region of the VP1 gene (541 base pairs) revealed
that the Brazilian isolates characterized here share 96-
99% of nucleotide (nt) identity with contemporary
Brazilian isolates, 9598% nt identity with US and 9093%
nt identity with the prototype strain SVV001. SVA
was associated with neonatal mortality based on RTPCR,
virus isolation and sequencing results. The genetic
analysis shows the diversity of the Brazilian SVA isolates
and that more studies are needed to demonstrate if there
are differences between SVA from neonatal mortality
and vesicular cases. SVA is clinically and economically
important due to its resemblance with vesicular diseases,
so the diagnosis tools are critical to confirm the initial
investigation.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
