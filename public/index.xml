<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lok Raj Joshi on Lok Raj Joshi</title>
    <link>/</link>
    <description>Recent content in Lok Raj Joshi on Lok Raj Joshi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 15 Oct 2017 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Download CSV into R Studio from Github</title>
      <link>/2019/01/09/download-csv-into-r-studio-from-github/</link>
      <pubDate>Wed, 09 Jan 2019 21:13:14 -0500</pubDate>
      
      <guid>/2019/01/09/download-csv-into-r-studio-from-github/</guid>
      <description>&lt;p&gt;&lt;strong&gt;You can use “readr” package to download CSV file and R data file from the github.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Steps&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Go to the github repository link where you have the CSV file&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click on the &lt;strong&gt;raw&lt;/strong&gt; option present on the top right of the data&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This will open a new window in the browser&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The link should be like &lt;a href=&#34;https://raw.githubusercontent.com/..&#34; class=&#34;uri&#34;&gt;https://raw.githubusercontent.com/..&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to use this link to download csv file from the Github&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library (readr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;readr&amp;#39; was built under R version 3.5.2&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;urlfile=&amp;quot;https://raw.githubusercontent.com/lrjoshi/webpage/master/public/post/c159s.csv&amp;quot;

mydata&amp;lt;-read_csv(url(urlfile))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   Experiment = col_character(),
##   Virus = col_character(),
##   Cell = col_character(),
##   MOI = col_double(),
##   hpi = col_double(),
##   Titer = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#lets have a peek into the data
head(mydata)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 6
##   Experiment Virus Cell    MOI   hpi Titer
##   &amp;lt;chr&amp;gt;      &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;dbl&amp;gt;
## 1 EXP I      C159S OFTu    0.1     0  4.75
## 2 EXP I      C159S OFTu    0.1     6  2.75
## 3 EXP I      C159S OFTu    0.1    12  2.75
## 4 EXP I      C159S OFTu    0.1    24  5   
## 5 EXP I      C159S OFTu    0.1    48  5.5 
## 6 EXP I      C159S OFTu    0.1    72  7&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use this method to dowload R data file from the github.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Detection of Fowlpox virus carrying distinct genome segments of Reticuloendotheliosis virus</title>
      <link>/publication/fowlpox/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 -0500</pubDate>
      
      <guid>/publication/fowlpox/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Highlights&lt;/p&gt;

&lt;p&gt;•Two distinct FWPV populations were detected in the skin of a wild bird affected with FWPV.&lt;/p&gt;

&lt;p&gt;•Metagenomics revealed two FWPV genome populations containing the insertion of REV LTR or the full-length provirus.&lt;/p&gt;

&lt;p&gt;•Detection of these distinct populations in other clinical samples of viral isolates suggest that this is a usual event.&lt;/p&gt;

&lt;p&gt;•Passage of the FWPV-REV in cell culture resulted in loss of the full-length REV provirus, suggesting instability.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shiny App for Designing Primers for DNA Cloning</title>
      <link>/2018/09/01/shiny-app-for-designing-primers-for-dna-cloning/</link>
      <pubDate>Sat, 01 Sep 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/09/01/shiny-app-for-designing-primers-for-dna-cloning/</guid>
      <description>&lt;p&gt;Cloning is one of the most widely used tool in molecular biology. Cloning primers typically contain target sequence and restriction site as overhang. Designing these primers manually can be time consuming and chances of errors are high. This &lt;a href=&#34;https://lokraj.shinyapps.io/cloningApp/&#34;&gt;Shiny app&lt;/a&gt; is designed to automate primer designing process for DNA cloning.&lt;/p&gt;
&lt;iframe src=&#34;https://lokraj.shinyapps.io/cloningApp/?showcase=0&#34; width=&#34;672&#34; height=&#34;600px&#34;&gt;
&lt;/iframe&gt;
&lt;p&gt;Basically, what this app does is :&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;For forward primer, it extracts sequences from 5 primer end. You can choose number of base pairs you want. Default is 22.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For reverse primer, it extracts sequence from 3 prime end and reverse complements the sequence.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then it adds restriction sites to the 3’ end of the primer. You can select among the list of more than 200 restriction enzymes. It uses a database from the New England Biolabs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then it adds 5 extra base pairs to the 3’ end of the primers.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You also get some other useful information about your primer. This app will look for the restriction enzyme sequence within the DNA sequence that you enter. If the restriction site is present you will see a table showing the location of restriction sites. If the restricion site is not present, you will see an empty table. Also, you can see how the selected restrcion enzymes cut within their recognition sites.&lt;/p&gt;
&lt;p&gt;You can try app below.There is a sample DNA sequence for you to play around. Sometimes, you might find the app in idle state.You can activate it by clicking &lt;strong&gt;Reload&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lokraj.shinyapps.io/cloningApp/&#34;&gt;Click here to visit app page&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Codes for this app are available on my &lt;a href=&#34;https://github.com/lrjoshi/cloningApp&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Virus Growth Curve Generator App</title>
      <link>/2018/08/20/virus-growth-curve-generator-app/</link>
      <pubDate>Mon, 20 Aug 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/08/20/virus-growth-curve-generator-app/</guid>
      <description>&lt;p&gt;I designed this &lt;a href=&#34;https://lokraj.shinyapps.io/gcplotR/&#34;&gt;Shiny app&lt;/a&gt; to generate growth curves. This app is based on ggplot and dplyr functions.You can try by downloading &lt;a href=&#34;https://github.com/lrjoshi/files/blob/master/public/c159s.csv&#34;&gt;sample data here&lt;/a&gt;.Codes are available on my &lt;a href=&#34;https://github.com/lrjoshi/gcplotR&#34;&gt;Github&lt;/a&gt;.Sometimes, the app goes to idle state.You can activate it by clicking &lt;strong&gt;Reload&lt;/strong&gt; button below. Here is the sample output. &lt;img src=&#34;http://lokfiles.netlify.com/graph.png&#34; /&gt;&lt;/p&gt;
&lt;iframe src=&#34;https://lokraj.shinyapps.io/gcplotR/?showcase=0&#34; width=&#34;672&#34; height=&#34;600px&#34;&gt;
&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Creating 96-Well Plates in R</title>
      <link>/2018/07/23/creating-96-well-plates-in-r/</link>
      <pubDate>Mon, 23 Jul 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/07/23/creating-96-well-plates-in-r/</guid>
      <description>&lt;p&gt;This week I did some virus neutralization test and I was wondering if there is any way to show the results in 96-well plate format. I was trying to find if there is any R package that can do this. Actually there is one (or might be more). I found a package called &lt;strong&gt;platetools&lt;/strong&gt; that can plot values in plate format.&lt;/p&gt;
&lt;p&gt;Let’s see how I used this package.&lt;/p&gt;
&lt;div id=&#34;r-markdown&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;R Markdown&lt;/h1&gt;
&lt;p&gt;First load all the required packages&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(platetools)
library(viridis)
## Loading required package: viridisLite&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Prepare your datasets.I prepared in R as shown below.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data=read.csv(&amp;quot;df.csv&amp;quot;)
data
##     X vals well
## 1   1    1  A01
## 2   2    0  A02
## 3   3    0  A03
## 4   4    1  A04
## 5   5    0  A05
## 6   6    0  A06
## 7   7    0  A07
## 8   8    0  A08
## 9   9    0  A09
## 10 10    0  A10
## 11 11    0  A11
## 12 12    1  A12
## 13 13    1  B01
## 14 14    0  B02
## 15 15    0  B03
## 16 16    1  B04
## 17 17    0  B05
## 18 18    0  B06
## 19 19    0  B07
## 20 20    0  B08
## 21 21    0  B09
## 22 22    0  B10
## 23 23    0  B11
## 24 24    1  B12
## 25 25    1  C01
## 26 26    0  C02
## 27 27    0  C03
## 28 28    1  C04
## 29 29    0  C05
## 30 30    0  C06
## 31 31    0  C07
## 32 32    0  C08
## 33 33    0  C09
## 34 34    0  C10
## 35 35    1  C11
## 36 36    0  C12
## 37 37    1  D01
## 38 38    0  D02
## 39 39    0  D03
## 40 40    0  D04
## 41 41    0  D05
## 42 42    0  D06
## 43 43    0  D07
## 44 44    0  D08
## 45 45    0  D09
## 46 46    0  D10
## 47 47    1  D11
## 48 48    0  D12
## 49 49    0  E01
## 50 50    0  E02
## 51 51    0  E03
## 52 52    0  E04
## 53 53    0  E05
## 54 54    0  E06
## 55 55    0  E07
## 56 56    0  E08
## 57 57    0  E09
## 58 58    0  E10
## 59 59    1  E11
## 60 60    0  E12
## 61 61    0  F01
## 62 62    0  F02
## 63 63    0  F03
## 64 64    0  F04
## 65 65    0  F05
## 66 66    0  F06
## 67 67    0  F07
## 68 68    0  F08
## 69 69    0  F09
## 70 70    0  F10
## 71 71    1  F11
## 72 72    0  F12
## 73 73    0  G01
## 74 74    0  G02
## 75 75    0  G03
## 76 76    0  G04
## 77 77    0  G05
## 78 78    0  G06
## 79 79    0  G07
## 80 80    0  G08
## 81 81    0  G09
## 82 82    0  G10
## 83 83    1  G11
## 84 84    0  G12
## 85 85    0  H01
## 86 86    0  H02
## 87 87    0  H03
## 88 88    0  H04
## 89 89    0  H05
## 90 90    0  H06
## 91 91    0  H07
## 92 92    0  H08
## 93 93    0  H09
## 94 94    0  H10
## 95 95    1  H11
## 96 96    0  H12&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally plot your data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plate_id &amp;lt;- rep(c(&amp;quot;My Plate&amp;quot;), each = 96)

z_grid(data = data$vals,
       well = data$well,
       plate_id = plate_id) +
  ggtitle(&amp;quot;Virus Neutralization Test&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2015-07-23-r-rmarkdown_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here, the label is not useful for me because I am interested only in positive and negative wells. But it can be useful in plotting ELISA plates.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Pathogenicity and cross-reactive immune responses of a historical and a contemporary Senecavirus A strains in pigs</title>
      <link>/publication/sva-cross-reactive/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 -0400</pubDate>
      
      <guid>/publication/sva-cross-reactive/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goals of this study were to compare the pathogenicity and infection dynamics of a historical and a contemporary SVA strains (SVV 001 and SD15-26) and to assess cross-neutralizing and cross-reactive T cell responses following experimental infection in pigs. Both SVA strains successfully infected all inoculated animals, resulting in viremia and robust antibody and cellular immune responses. SVA SD15-26 infection resulted in characteristic clinical signs and vesicular lesions, however, SVA SVV 001 did not cause overt clinical disease with inoculated animals remaining clinically normal during the experiment. Notably, neutralization- and -recall IFN-γ expression-assays revealed marked cross-neutralizing antibody and cross-reactive T cell responses between the two viral strains. Together these results demonstrate that the historical SVA SVV 001 strain presents low virulence in pigs when compared to the contemporary SVA SD15-26 strain. Additionally, immunological assays indicate that SVA SVV 001 and SD15-26 are antigenically related and share conserved antigenic determinants.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Next generation sequencing</title>
      <link>/project/deep-learning/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;We are using Illumina MiSeq for viral genome sequencing.We have sequenced over 40 isolated of Senecavirus A using Illumina Miseq. Often we run viral metagenomic sequencing in &lt;a href=&#34;https://lokfiles.netlify.com/papilloma.pdf&#34; target=&#34;_blank&#34;&gt;clinical samples for disease diagnosis&lt;/a&gt;. I have deep interest in viral informatics. In the &lt;strong&gt;Posts&lt;/strong&gt; section of this webpage you can find some of the tools I am learning to develop my bioinformatics skills.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Senecavirus A Pathogenesis</title>
      <link>/project/sva-pathogenesis/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/project/sva-pathogenesis/</guid>
      <description>&lt;p&gt;Senecavirus A is a re-emergiging disease of swine. It causes vesicular disease in swine. Despite detection of Senecavirus A nucleic acid in pigs with vesicular disease, attemps to establish causal relationship had failed. We were able to reproduce the disease in swine and we have published a detail pathogenesis of Senecavirus A &lt;a href=&#34;http://lokfiles.netlify.com/sva-pathogenesis.pdf&#34; target=&#34;_blank&#34;&gt;in this paper&lt;/a&gt;. We are still working to understand other aspects of this disease in swine.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vectored-vaccine development</title>
      <link>/project/orf-vector/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/project/orf-vector/</guid>
      <description>&lt;p&gt;We have developed Orf virus, which is parapox virus, as a vaccine delivery platfrom. We are using well-characterized immunomudolatory loci present in the genome of Orf virus to insert heterologous genes to develop receombinant viruses that can be used as a vaccine. We have already shown high level of protection against PEDV using &lt;a href=&#34;https://lokfiles.netlify.com/orfv-pedv.pdf&#34; target=&#34;_blank&#34;&gt;recombinant Orf virus expressing Spike gene of PEDV&lt;/a&gt;. This recombinant virus also protects piglets born to our recombinant virus immunized sows &lt;a href=&#34;https://lokfiles.netlify.com/pedv-passive-immunity.pdf&#34; target=&#34;_blank&#34;&gt;(Check paper here)&lt;/a&gt;. Our goal is to develop Orf virus as a vaccine delivery platform for many other infectious disease of swine and other livestock species.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RNA-Seq Data Analysis in R</title>
      <link>/2018/05/20/rna-seq-data-analysis-in-r/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/2018/05/20/rna-seq-data-analysis-in-r/</guid>
      <description>&lt;p&gt;RNA-Seq data analysis can be complicated. Softwares with graphical user interface like CLC Workbench, have made RNA-Seq data analysis quite easier.However, they are expensive and in most of the cases you might not be able to tweak your analysis in the exact way you want. Another important aspect of learning RNA-Seq analysis is understanding the algorithms behind the analysis.To this end, I decided to run a small simulation to understand how RNA-Seq analysis algorithms work.It is amazing how a single R package can do things like read aligning, read mapping and read counts in few lines of codes.&lt;/p&gt;

&lt;p&gt;Install Rsubread package in R.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source(&amp;quot;https://bioconductor.org/biocLite.R&amp;quot;)
biocLite(&amp;quot;Rsubread&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Load package&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;library (Rsubread)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For this simulation I created a small .fasta file by pulling some of the sequences from the &lt;strong&gt;Senecavirus A&lt;/strong&gt; genome. I created a fasta file with a few contigs each containing about 70-100 basepairs , and named each contig as read 1, read 2 and so on. And  I also pulled some sequences from the Zika virus which are names as Zika1 and Zika2. I will be aligning my reads to Senecavirus A genome. So, Zika virus reads should not be counted by Rsubread while aligning.&lt;/p&gt;

&lt;p&gt;Sequences extracted:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;read1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;read2
AGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGTGGGGAACGGTGCGGCTCCAATTCCTGCGTCGCCA
&amp;gt;read3
AAGGTGTTAGCGCACCCAAACGGCGCATCTACCAATGCTATTGGTGTGGTCTGCGAGTTCTAGCCTACTC
&amp;gt;read4
GTTTCTCCCCTACTCACTCATTCACACACAAAAACTGTGTTGTAACTACAAGATTTGGCCCTCGCACGGG
&amp;gt;read5
ATGTGCGATAACCGCAAGATTGACTCAAGCGCGGAAAGCGCTGTAACCACATGCTGTTAGTCCCTTTATG
&amp;gt;readagain1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;readagain2
AGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGTGGGGAACGGTGCGGCTCCAATTCCTGCGTCGCCA
&amp;gt;readagain3
GTTTCTCCCCTACTCACTCATTCACACACAAAAACTGTGTTGTAACTACAAGATTTGGCCCTCGCACGGG
&amp;gt;read12
CGGGGGGTAAACCGGCTGTGTTTGCTAGAGGCACAGAGGAGCAACATCCAACCTGCTTTTGT
&amp;gt;read23
CGGCTCCAATTCCTGCGTCGCCAAAGGTGTTAGCGCACCCAA
&amp;gt;read34
GTGTGGTCTGCGAGTTCTAGCCTACTCGTTTCTCCCCTACTCACTCATTCACACACAAAAA
&amp;gt;read45
CTACAAGATTTGGCCCTCGCACGGGATGTGCGATAACCGCAAGATTGACTCAAGCGCGGAAAGCGCTGTAACC
&amp;gt;readsvalast
TGCCGTACCGAGTCACGAGTACCTGCAGGCAAGATGGAGGGCCTTGTTCGACTGACCTGGATAGCCCAACGCGCTTCGGTGCTGCCGGCGATTCTGGGAGAACTCAGTCGGA
&amp;gt;readagain1
AAGGAAGGACTGGGCATGAGGGCCCAGTCCTTCCTTTCCCCTTCCGGGGGGTAAACCGGCTGTGTTTGCT
&amp;gt;zika1
AGTTGTTGATCTGTGTGAATCAGACTGCGACAGTTCGAGTTTGAAGCGAAAGCTAGCAACAGTATCAACA
&amp;gt;zika12
AAAGCTAGCAACAGTATCAACAGGTTTTATTTTGGATTTGGAAACGAGAGTTTCTGGTCATGAAAAACCCA
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This fasta file needs to be changed into &lt;strong&gt;fastq&lt;/strong&gt; format. There are many tools available to convert fasta file to fastq format. I used &lt;strong&gt;reformat.sh&lt;/strong&gt; script which is a part of &lt;strong&gt;bbmap&lt;/strong&gt;. You can find details about bbmap and reformat.sh script elsewhere. The general syntax is as follow:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./reformat.sh in= meta.fasta out=meta.fastq qfake=35

#meta.fasta is my input file, meta.fastq is the output file and we are assigning quality score of 34 to all the basepairs.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, lets go back to R. We have loaded our package already. First, we need to build index of our reference files. Use the same Senecavirus A whole genome file which you used to extract reads in the above example. The file can be in fasta format. Then run follwing command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#syntax
buildindex(basename=&amp;quot;reference_index&amp;quot;,reference=ref)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In my case it would be&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;buildindex(basename= “seneca”, reference= “sva.fasta”)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, I can align reads in &lt;strong&gt;meta.fastq&lt;/strong&gt; to the index file which I  created above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;align(index=&amp;quot;seneca&amp;quot;,readfile1=”meta.fastq”,output_file=&amp;quot;alignResults.BAM&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I saw that all the reads that were in meta.fastq belonging to Senecavirus A were aligned while , all the Zika virus reads were ignored.The output will be in .BAM format.&lt;/p&gt;

&lt;p&gt;Now the tricky part. We need a annotated file in GTF or GFF format to count the features or genes aligned. For viruses, in most of the cases you don&amp;rsquo;t find well-annotated GTF or GFF files. Rsubread package allows you to create  such files in tabular format which they call it SAF format.&lt;/p&gt;

&lt;p&gt;So, lets use follwing code to create one SAF file for this analysis.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ann &amp;lt;- data.frame(
GeneID=c(&amp;quot;gene1&amp;quot;,&amp;quot;gene1&amp;quot;,&amp;quot;gene2&amp;quot;,&amp;quot;gene2&amp;quot;),
Chr=&amp;quot;KX778101.1&amp;quot;,
Start=c(100,1000,3000,5000),
End=c(500,1800,4000,5500),
Strand=c(&amp;quot;+&amp;quot;,&amp;quot;+&amp;quot;,&amp;quot;-&amp;quot;,&amp;quot;-&amp;quot;),
stringsAsFactors=FALSE)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt; ann
  GeneID        Chr Start  End Strand
1  gene1 KX778101.1   100  500      +
2  gene1 KX778101.1  1000 1800      +
3  gene2 KX778101.1  3000 4000      -
4  gene2 KX778101.1  5000 5500      -
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here you have to use Genebank accession number of virus genome as Chr. Beacuse .BAM file that we created by aligning to Senecavirus A genome have accession number liked to each reads. Other parameters can be changed.&lt;/p&gt;

&lt;p&gt;Now, final step is to count reads.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fc_SE &amp;lt;- featureCounts(&amp;quot;alignResults.BAM&amp;quot;,annot.ext=ann)
fc_SE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see how many features were counted on the basis of information you provided in SAF table. You will see all the sequences that we extracted from the Senecavirus A genome have been been counted while there will not be any counts for Zika virus sequences.&lt;/p&gt;

&lt;p&gt;Hope this will help you to understand how Rsubread package works. If you have any confusion about using Rsubread package, they have very good documentation on Bioconductor.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Passive immunity to porcine epidemic diarrhea virus following immunization of pregnant gilts with a recombinant orf virus vector expressing the spike protein</title>
      <link>/publication/pedv-passive-immunity/</link>
      <pubDate>Thu, 03 May 2018 00:00:00 -0400</pubDate>
      
      <guid>/publication/pedv-passive-immunity/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Passive immunity is critical for protection of neonatal piglets against porcine epidemic diarrhea virus (PEDV). Here, we investigated the immunogenicity of an orf virus (ORFV) vector expressing the full-length spike (S) protein of PEDV (ORFV-PEDV-S) in pregnant gilts and its ability to confer passive immunity and protection in piglets. Three doses of ORFV-PEDV-S were given to two groups of PEDV-negative pregnant gilts, with the last dose being administered two weeks prior to farrowing. One of the two groups immunized with the ORFV-PEDV-S recombinant virus was also exposed to live PEDV orally on day 31 post-immunization (pi). Antibody responses were assessed in serum, colostrum and milk of immunized gilts, and passive transfer of antibodies was evaluated in piglet sera. The protective efficacy of ORFV-PEDV-S was evaluated after challenge of the piglets with PEDV. PEDV-specific IgG, IgA and neutralizing antibody (NA) responses were detected in ORFV-PEDV-S-immunized and ORFV-PEDV-S-immunized/PEDV-exposed gilts. PEDV NA, IgG and IgA were detected in the serum of piglets born to immunized gilts, demonstrating the transfer of antibodies through colostrum and milk. Piglets born to immunized gilts showed reduced morbidity and a marked reduction in mortality after PEDV challenge in comparison to control piglets. Piglets born to gilts that received ORFV-PEDV-S and were exposed to live PEDV showed stronger NA responses and lower clinical scores when compared to piglets born to gilts immunized with ORFV-PEDV-S alone. These results demonstrate the potential of ORFV as a vaccine delivery platform capable of eliciting passive immunity against PEDV.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RacePCR- R package for designing primers for Race PCR</title>
      <link>/2018/03/20/racepcr--r-package-for-designing-primers-for-race-pcr/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 -0400</pubDate>
      
      <guid>/2018/03/20/racepcr--r-package-for-designing-primers-for-race-pcr/</guid>
      <description>

&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;

&lt;p&gt;You can use this package to design 3&amp;rsquo; and 5&amp;rsquo;primers for Race PCR. The design is based on the method described by Clonetech Race PCR manual. The resulting primers will have vector sequence automatically added to them. Source code is available on my &lt;a href=&#34;https://github.com/lrjoshi/RacepcR&#34; target=&#34;_blank&#34;&gt;Github page&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;library(devtools)&lt;/p&gt;

&lt;p&gt;install_github(&amp;ldquo;lrjoshi/RacepcR&amp;rdquo;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;getDNA(dnaseq) #enter DNA Sequence and check length&lt;/p&gt;

&lt;p&gt;quality (dnaseq) #to see if your sequence contains character other than AGTC.&lt;/p&gt;

&lt;p&gt;gcbarplot(dnaseq) #gives barplot of nucleotide content&lt;/p&gt;

&lt;p&gt;get5prime(dnaseq,x) #gives you 5&amp;rsquo; primer&lt;/p&gt;

&lt;p&gt;get3prime(dnaseq,y) #gives you 3&amp;rsquo; primer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;arguments&#34;&gt;Arguments&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;dnaseq : it is the sequence of your DNA. For eg : &amp;ldquo;aaggcctt&amp;rdquo;&lt;/p&gt;

&lt;p&gt;x  :position where you want to start your 5&amp;rsquo; primer&lt;/p&gt;

&lt;p&gt;y  :position where you want to start your 3&amp;rsquo; primer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;note&#34;&gt;Note&lt;/h2&gt;

&lt;p&gt;This package depends on Biostrings package. So, you should have already installed Biostrings package from Bioconductor.&lt;/p&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;library (RacepcR)&lt;/p&gt;

&lt;p&gt;library(Biostrings)&lt;/p&gt;

&lt;p&gt;getDNA(&amp;ldquo;aaggccttcc&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;quality (&amp;ldquo;aaggcct&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;gcbarplot(&amp;ldquo;aaaaagccggt&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;get5prime(&amp;ldquo;aaaggcggcggcttcggcgcgctcgtgctgctgctgcggcgctcctttcgctcgtcgctgctttctctcgct&amp;rdquo;,30)&lt;/p&gt;

&lt;p&gt;get3prime(&amp;ldquo;aaaggcggccccctcttcggccttcgctgctgctgcggcgcggctcgcgctgctgctttgctgctcgggctcgt&amp;rdquo;,10)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Adaptive immune responses following Senecavirus A infection in pigs</title>
      <link>/publication/sva-adaptive/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 -0500</pubDate>
      
      <guid>/publication/sva-adaptive/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Senecavirus A (SVA), an emerging picornavirus of swine, causes vesicular disease (VD) that is clinically indistinguishable from foot-and-mouth disease (FMD) in pigs. Many aspects of SVA interactions with the host and the host immune responses to infection, however, remain unknown. In the present study, humoral and cellular immune responses to SVA were evaluated following infection in pigs. We show that SVA infection elicited an early and robust virus-neutralizing (VN) antibody response, which coincided and was strongly correlated with VP2- and VP3-specific IgM responses. Notably, the neutralizing antibody (NA) responses paralleled the reduction of viremia and resolution of the disease. Analysis of the major porcine T-cell subsets revealed that during the acute/clinical phase of SVA infection (14 days postinfection [p.i.]), T-cell responses were characterized by an increased frequency of αβ T cells, especially CD4+ T cells, which were first detected by day 7 p.i. and increased in frequency until day 14 p.i. Additionally, the frequency of CD8+ and double-positive CD4+ CD8+ T cells (effector/memory T cells) expressing interferon gamma (IFN-γ) or proliferating in response to SVA antigen stimulation increased after day 10 p.i. Results presented here show that SVA elicits B- and T-cell activation early upon infection, with IgM antibody levels being correlated with early neutralizing activity against the virus and peak B- and T-cell responses paralleling clinical resolution of the disease. The work provides important insights into the immunological events that follow SVA infection in the natural host.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Immunogenicity of ORFV-based vectors expressing the rabies virus glycoprotein in livestock species</title>
      <link>/publication/orfv-rabies/</link>
      <pubDate>Wed, 01 Nov 2017 00:00:00 -0400</pubDate>
      
      <guid>/publication/orfv-rabies/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The parapoxvirus Orf virus (ORFV) encodes several immunomodulatory proteins (IMPs) that modulate host-innate and pro-inflammatory responses and has been proposed as a vaccine delivery vector for use in animal species. Here we describe the construction and characterization of two recombinant ORFV vectors expressing the rabies virus (RABV) glycoprotein (G). The RABV-G gene was inserted in the ORFV024 or ORFV121 gene loci, which encode for IMPs that are unique to parapoxviruses and inhibit activation of the NF-κB signaling pathway. The immunogenicity of the resultant recombinant viruses (ORFV∆024RABV-G or ORFV∆121RABV-G, respectively) was evaluated in pigs and cattle. Immunization of the target species with ORFV∆024RABV-G and ORFV∆121RABV-G elicited robust neutralizing antibody responses against RABV. Notably, neutralizing antibody titers induced in ORFV∆121RABV-G-immunized pigs and cattle were significantly higher than those detected in ORFV∆024RABV-G-immunized animals, indicating a higher immunogenicity of ORFVΔ121-based vectors in these animal species.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A novel bovine papillomavirus type in the genus Dyokappapapillomavirus</title>
      <link>/publication/papilloma/</link>
      <pubDate>Mon, 16 Oct 2017 00:00:00 -0400</pubDate>
      
      <guid>/publication/papilloma/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Papillomaviruses are a diverse group of viruses that are known to infect a wide range of animal species. Bovine papillomaviruses (BPVs) are divided into at least 21 genotypes (BPV1 to BPV21),  with most BPV isolates/strains described to date belonging to one of four genera, including Deltapapillomavirus, Xipapillomavirus, Epsilonpapillomavirus and Dyoxipapillomavirus. Here, we describe the identification and genetic characterization of a new BPV type in the genus Dyokappapapillomavirus. A farm in the state of New York, USA, reported chronic cases of vulvovaginitis in Holstein cows in 2016. Biopsies and/or swab samples collected from the vaginal mucosa were subjected to diagnostic investigation. Conventional diagnostic assays yielded negative results, and vaginal swab samples were subjected to viral metagenomic sequencing. Notably, BLAST searches revealed a papillomavirus genome with 7480 bp in length (67% nt sequence identity to BPV16). Additionally, phylogenetic analysis of the L1 gene of the papillomavirus identified here (tentatively named BPV22) revealed that it clusters with members of the genus Dyokappapapillomavirus. Interestingly, the recently identified BPV16, which was detected in fibropapilloma lesions in cattle also clusters within the Dyokappapapillomavirus group. Each virus, however, forms a separate branch in the phylogenetic tree. These results indicate that the putative BPV22 represents the second BPV within the genus Dyokappapapillomavirus.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
