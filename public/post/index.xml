<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Lok Raj Joshi</title>
    <link>/post/</link>
    <description>Recent content in Posts on Lok Raj Joshi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 09 Jan 2019 21:13:14 -0500</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Download CSV into R Studio from Github</title>
      <link>/2019/01/09/download-csv-into-r-studio-from-github/</link>
      <pubDate>Wed, 09 Jan 2019 21:13:14 -0500</pubDate>
      
      <guid>/2019/01/09/download-csv-into-r-studio-from-github/</guid>
      <description>You can use “readr” package to download CSV file and R data file from the github.
Steps
Go to the github repository link where you have the CSV file
Click on the raw option present on the top right of the data
This will open a new window in the browser
The link should be like https://raw.githubusercontent.com/..
You have to use this link to download csv file from the Github</description>
    </item>
    
    <item>
      <title>Shiny App for Designing Primers for DNA Cloning</title>
      <link>/2018/09/01/shiny-app-for-designing-primers-for-dna-cloning/</link>
      <pubDate>Sat, 01 Sep 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/09/01/shiny-app-for-designing-primers-for-dna-cloning/</guid>
      <description>Cloning is one of the most widely used tool in molecular biology. Cloning primers typically contain target sequence and restriction site as overhang. Designing these primers manually can be time consuming and chances of errors are high. This Shiny app is designed to automate primer designing process for DNA cloning.
Basically, what this app does is :
Extracts target sequence from the input DNA. You can choose number of base pairs you want.</description>
    </item>
    
    <item>
      <title>Virus Growth Curve Generator App</title>
      <link>/2018/08/20/virus-growth-curve-generator-app/</link>
      <pubDate>Mon, 20 Aug 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/08/20/virus-growth-curve-generator-app/</guid>
      <description>I designed this Shiny app to generate growth curves. This app is based on ggplot and dplyr functions.You can try by downloading sample data here.Codes are available on my Github.Sometimes, the app goes to idle state.You can activate it by clicking Reload button below. Here is the sample output. </description>
    </item>
    
    <item>
      <title>Creating 96-Well Plates in R</title>
      <link>/2018/07/23/creating-96-well-plates-in-r/</link>
      <pubDate>Mon, 23 Jul 2018 21:13:14 -0500</pubDate>
      
      <guid>/2018/07/23/creating-96-well-plates-in-r/</guid>
      <description>This week I did some virus neutralization test. I wanted to show the results exactly I saw in 96-well plate. I was looking if there is any package in R that can actually do this. Actually there is one (or might be more). I found a package called platetools that can plot values in plates.
I wan’t to show how I did it.
R MarkdownFirst load all the required packages</description>
    </item>
    
    <item>
      <title>RNA-Seq Data Analysis in R</title>
      <link>/2018/05/20/rna-seq-data-analysis-in-r/</link>
      <pubDate>Sun, 20 May 2018 00:00:00 -0500</pubDate>
      
      <guid>/2018/05/20/rna-seq-data-analysis-in-r/</guid>
      <description>RNA-Seq data analysis can be complicated. Softwares with graphical user interface like CLC Workbench have made RNA-Seq data analysis quite easier but often we don&amp;rsquo;t know how the algorithm is working especially if you are from biology background like me. I decided to run a small simulation to understand how this works.It is amazing how a single R package can do things like read aligning and read counts in a few lines of codes.</description>
    </item>
    
    <item>
      <title>RacePCR- R package for designing primers for Race PCR</title>
      <link>/2018/03/20/racepcr--r-package-for-designing-primers-for-race-pcr/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 -0500</pubDate>
      
      <guid>/2018/03/20/racepcr--r-package-for-designing-primers-for-race-pcr/</guid>
      <description>Description You can use this package to design 3&amp;rsquo; and 5&amp;rsquo;primers for Race PCR. The design is based on as described by Clonetech Race PCR manual. The resulting primers will have vector sequence automatically added to them. Source code is available at my Github page.
Installation  library(devtools)
install_github(&amp;ldquo;lrjoshi/RacepcR&amp;rdquo;)
 Usage  getDNA(dnaseq) #enter DNA Sequence and check length
quality (dnaseq) #to see if your sequence contains character other than AGTC.</description>
    </item>
    
    <item>
      <title>Working with NCBI SRA files</title>
      <link>/2016/04/20/working-with-ncbi-sra-files/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 -0500</pubDate>
      
      <guid>/2016/04/20/working-with-ncbi-sra-files/</guid>
      <description>Although seems straightforward, working with SRA files can be tricky for newbies. Here I have short description about how to download and work with SRA files.
NGS read files can be downloaded using sra-toolkit. First you have to download latest version of sra-toolkit from their website. The file should be in tar.gz format.
Then untar the file based on the OS you are using.
Then use the following command to put command line in path</description>
    </item>
    
  </channel>
</rss>